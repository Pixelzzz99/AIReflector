// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞ —Ç–µ–∫—Å—Ç–∞
function detectLanguage(text: string): "ru" | "en" {
  // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Ü–∏—Ñ—Ä –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
  const cleanText = text.replace(/[^a-zA-Z–∞-—è—ë–ê-–Ø–Å\s]/g, " ");

  const cyrillicChars = cleanText.match(/[–∞-—è—ë–ê-–Ø–Å]/g);
  const latinChars = cleanText.match(/[a-zA-Z]/g);

  if (!cyrillicChars && !latinChars) {
    return "en";
  }

  if (!cyrillicChars) {
    return "en";
  }

  if (!latinChars) {
    return "ru";
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º—É —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—é
  const totalChars = cyrillicChars.length + latinChars.length;
  const cyrillicPercent = (cyrillicChars.length / totalChars) * 100;

  const detectedLanguage = cyrillicPercent >= 40 ? "ru" : "en";

  return detectedLanguage;
}

// –®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
const PROMPTS = {
  ru: {
    systemSuffix:
      "–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –æ–ø—ã—Ç–Ω—ã–º —Ä–µ—Ñ–ª–µ–∫—Å–∏–≤–Ω—ã–º –∫–æ—É—á–µ–º. –í—ã–≤–æ–¥–∏—Ç–µ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π, —É–¥–æ–±–Ω—ã–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ Markdown —Å –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —à–∞–≥–∞–º–∏, –∫–æ–≥–¥–∞ —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ. –í–ê–ñ–ù–û: –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ —Ç–æ–º –∂–µ —è–∑—ã–∫–µ, —á—Ç–æ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
    userTemplate: `–í–∞–º –¥–∞–Ω–∞ –ª–∏—á–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ –∏–∑ Obsidian. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –µ—ë –∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –ù–ê –¢–û–ú –ñ–ï –Ø–ó–´–ö–ï, —á—Ç–æ –∏ –∑–∞–º–µ—Ç–∫–∞:

1) –î–≤–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Å–∞–π—Ç.
2) 3‚Äì5 –¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–æ–¥ –º–æ–∏ —Ü–µ–ª–∏.
3) –ï—Å–ª–∏ –∑–∞–º–µ—Ç–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏–ª–∏ —Ä–µ—à–µ–Ω–∏—è, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π –∏–ª–∏ —á–µ–∫-–ª–∏—Å—Ç.
4) –û–¥–∏–Ω –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥.

–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –±—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã, –∏–∑–±–µ–≥–∞–π—Ç–µ –±–∞–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –û–¢–í–ï–ß–ê–ô–¢–ï –ù–ê –¢–û–ú –ñ–ï –Ø–ó–´–ö–ï, –ß–¢–û –ò –°–û–î–ï–†–ñ–ò–ú–û–ï –ó–ê–ú–ï–¢–ö–ò.

–ú–µ—Ç–∞:
- –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏: {noteTitle}
- –ü—É—Ç—å: {notePath}
- –¢–µ–≥–∏: {tags}
- –ú–æ–∏ —Ü–µ–ª–∏/—Ñ–æ–∫—É—Å: {goals}

–ó–∞–º–µ—Ç–∫–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–∏–º–≤–æ–ª–æ–≤):


{noteContent}`,
  },
  en: {
    systemSuffix:
      "You are an expert reflective coach. Output compact, skimmable Markdown with numbered steps when useful. IMPORTANT: Always respond in the same language as the user's note content.",
    userTemplate: `You are given a personal note from Obsidian. Analyze it and return in the SAME LANGUAGE as the note:

1) A two-sentence reflection that captures the core insight.
2) 3‚Äì5 actionable next steps tailored to my goals.
3) If the note includes tasks or decisions, propose a simple decision rule or checklist.
4) One question that would move me forward.

Constraints: be concrete, avoid platitudes, don't repeat the note text. Use bullet points and short sentences. RESPOND IN THE SAME LANGUAGE AS THE NOTE CONTENT.

Meta:
- Note Title: {noteTitle}
- Path: {notePath}
- Tags: {tags}
- My goals/focus: {goals}

Note (last N chars):


{noteContent}`,
  },
};

export function buildPrompt(args: {
  noteTitle: string;
  notePath: string;
  noteContent: string;
  tags: string[] | string;
  goals: string;
  persona: string;
}) {
  const tags = Array.isArray(args.tags)
    ? args.tags.join(", ")
    : String(args.tags || "");

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –∑–∞–º–µ—Ç–∫–∏
  const language = detectLanguage(args.noteContent);
  console.log("üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —è–∑—ã–∫:", language);
  const templates = PROMPTS[language];

  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —è–∑—ã–∫–µ
  const userPrompt = templates.userTemplate
    .replace("{noteTitle}", args.noteTitle)
    .replace("{notePath}", args.notePath)
    .replace("{tags}", tags)
    .replace("{goals}", args.goals)
    .replace("{noteContent}", args.noteContent);

  const result = {
    system: `${args.persona} ${templates.systemSuffix}`,
    user: userPrompt,
  };

  return result;
}
